[tool.poetry]
name = "fsactl"
version = "0.1.3"
description = "Install and update MSFS2020 addons"
license = "GPL-3.0+"
readme = "README.md"
repository = "https://github.com/MichaelSasser/fsactl"
homepage = "https://michaelsasser.github.io/fsactl/index.html"
documentation = "https://michaelsasser.github.io/fsactl/index.html"
keywords = ['FlightSimulator', 'FS2020', 'MSFS2020', 'Flight', 'Simulator', 'Addon', 'AddonManager']
authors = ["Michael Sasser <Michael@MichaelSasser.org>"]
# Look here for all Classifiers:
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
    "Development Status :: 3 - Alpha",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Environment :: Console",
    "Environment :: Win32 (MS Windows)",
    "Intended Audience :: End Users/Desktop",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Topic :: Games/Entertainment",
    "Topic :: Games/Entertainment :: Simulation",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.9"
semver = ">=2.13,<4.0"
PyYAML = "^6.0"  # CVE-2020-1747: Version < 5.3.1
Jinja2 = "^3.1.2"
GitPython = "^3.1.31"
coloredlogs = "^15.0.1"
tabulate = "^0.9.0"
sphinx = { version = "^6.1.3", optional = true }
sphinx_rtd_theme = { version = "^1.2.0", optional = true }
sphinx-autodoc-typehints = { version = "^1.22", optional = true }
sphinxcontrib-programoutput = { version = "^0.17", optional = true }

[tool.poetry.extras]
docs = ["sphinx", "sphinx_rtd_theme", "sphinx-autodoc-typehints", "sphinxcontrib-programoutput"]

[tool.poetry.dev-dependencies]
pre-commit = "^3.3.2"
pytest = "^7.3.1"
flake8 = "^6.0.0"
neovim = "^0.3.1"
pydocstyle = "^6.3.0"
pylint = "^2.17.4"
pycodestyle = "^2.10.0"
yapf = "^0.33.0"
vulture = "^2.7"
mypy = "^1.3.0"
black = { version = "^23.3.0", allow-prereleases = true }
#black = { version = "^5.5.3", extras = ["pyproject"] }
flake8-bugbear = "^23.5.9"

[tool.poetry.scripts]
fsactl = "fsactl.app:main"

[tool.black]
line-length = 79
include = '\.pyi?$'
# exclude __init__.py because of ordered importing
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''


[tool.isort]
line_length = 79
force_single_line = true
atomic = true
float_to_top = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
multi_line_output = 3
use_parentheses = true
skip_glob = ["*/setup.py", "*.rst", "*.md", "*.yaml", "*.txt", "*.yml", "*.lock", "*.toml", "*.ini", "Makefile"]
filter_files = true
known_first_party = "fsactl"
known_third_party = [
    "pytest",
    # "requests",
    "tabulate",
    # "coloredlogs",
    "sphinx_rtd_theme",
    "git",
]

[tool.flake8]
max-line-length = 79
# max-complexity = 12
ignore = "E501"
select = "C,E,F,W,B,B901"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
